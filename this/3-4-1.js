// call(): 함수 호출과 동시에 해당 함수가 호출되는 메소드이고 첫번째 인자는 thisArg이고 뒤에서 부터는 해당 함수에 전달될 파라미터가 들어갈 수 있다.
// apply(): call() 메소드와 마찬가지로 호출과 동시에 실행되고 첫번째 인자는 thisArg이고 두번째 인자는 배열이고 해당 배열에 호출되는 함수의 파라미터 값을 주면된다.

// call()과 apply() 메소드의 차이점
// call()은 인자의 수가 계속 늘려서 해당 함수의 파라미터로 값을 전달한다는점과
// apply()는 두번째 인자에 배열 안에 값을 계속 추가해준다는점 이외에 다른점은 없다.

// bind(): 메소드가 호출되는 동시에 실행되지 않고 먼저 메소드의 첫번째 인자에 this를 넣어주고 그 뒤로부터의 인자는 해당 함수에 전달될 파라미터들을 인자로 전달해주면 된다.

function a(x, y, z) {
    console.log(this, x, y, z);
}

var b = {
    c: 'eee'
};

a.call(b, 1, 2, 3);
a.apply(b, [1, 2, 3]);

var c = a.bind(b);
c(1, 2, 3);

var d = a.bind(b, 1, 2);
d(3);